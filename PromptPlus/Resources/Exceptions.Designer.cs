//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace PromptPlusControls.Resources {
    using System;
    
    
    /// <summary>
    ///   A strongly-typed resource class, for looking up localized strings, etc.
    /// </summary>
    // This class was auto-generated by the StronglyTypedResourceBuilder
    // class via a tool like ResGen or Visual Studio.
    // To add or remove a member, edit your .ResX file then rerun ResGen
    // with the /str option, or rebuild your VS project.
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Resources.Tools.StronglyTypedResourceBuilder", "16.0.0.0")]
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    [global::System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
    internal class Exceptions {
        
        private static global::System.Resources.ResourceManager resourceMan;
        
        private static global::System.Globalization.CultureInfo resourceCulture;
        
        [global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode")]
        internal Exceptions() {
        }
        
        /// <summary>
        ///   Returns the cached ResourceManager instance used by this class.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        internal static global::System.Resources.ResourceManager ResourceManager {
            get {
                if (object.ReferenceEquals(resourceMan, null)) {
                    global::System.Resources.ResourceManager temp = new global::System.Resources.ResourceManager("PromptPlusControls.Resources.Exceptions", typeof(Exceptions).Assembly);
                    resourceMan = temp;
                }
                return resourceMan;
            }
        }
        
        /// <summary>
        ///   Overrides the current thread's CurrentUICulture property for all
        ///   resource lookups using this strongly typed resource class.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        internal static global::System.Globalization.CultureInfo Culture {
            get {
                return resourceCulture;
            }
            set {
                resourceCulture = value;
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The expression cannot be null..
        /// </summary>
        internal static string Ex_ExpressionCannotBeNull {
            get {
                return ResourceManager.GetString("Ex_ExpressionCannotBeNull", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Default file not found or invalid!.
        /// </summary>
        internal static string Ex_FileBrowserDefaultValueArgument {
            get {
                return ResourceManager.GetString("Ex_FileBrowserDefaultValueArgument", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to BrowserChoose {0} Not Implemented!.
        /// </summary>
        internal static string Ex_FileBrowserNotImplemented {
            get {
                return ResourceManager.GetString("Ex_FileBrowserNotImplemented", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Root folder not found or invalid!.
        /// </summary>
        internal static string Ex_FileBrowserRootValueArgument {
            get {
                return ResourceManager.GetString("Ex_FileBrowserRootValueArgument", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Required interactive environment..
        /// </summary>
        internal static string Ex_InputOutPutRedirected {
            get {
                return ResourceManager.GetString("Ex_InputOutPutRedirected", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Invalid expression..
        /// </summary>
        internal static string Ex_InvalidExpression {
            get {
                return ResourceManager.GetString("Ex_InvalidExpression", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Reserved value! Invalid hotkey..
        /// </summary>
        internal static string Ex_InvalidHotKey {
            get {
                return ResourceManager.GetString("Ex_InvalidHotKey", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Invalid Mask.
        /// </summary>
        internal static string Ex_InvalidMask {
            get {
                return ResourceManager.GetString("Ex_InvalidMask", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Invalid type {0}.
        /// </summary>
        internal static string Ex_InvalidType {
            get {
                return ResourceManager.GetString("Ex_InvalidType", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Invalid value {0}.
        /// </summary>
        internal static string Ex_InvalidValue {
            get {
                return ResourceManager.GetString("Ex_InvalidValue", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The maximum ({0}) is not valid when minimum is set to ({1})!.
        /// </summary>
        internal static string Ex_MaxArgumentOutOfRange {
            get {
                return ResourceManager.GetString("Ex_MaxArgumentOutOfRange", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The minimum ({0}) is not valid!.
        /// </summary>
        internal static string Ex_MinArgumentOutOfRange {
            get {
                return ResourceManager.GetString("Ex_MinArgumentOutOfRange", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Default value not allowed when IsPassword is true!.
        /// </summary>
        internal static string Ex_PasswordDefaultValue {
            get {
                return ResourceManager.GetString("Ex_PasswordDefaultValue", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Step pipeline with empty ID. apply the .Step method on the Prompt.Type object!.
        /// </summary>
        internal static string EX_PipeLineEmptyId {
            get {
                return ResourceManager.GetString("EX_PipeLineEmptyId", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The shortvalue  is not valid. The maximum must be less than {0}!.
        /// </summary>
        internal static string Ex_ShortvalueArgumentOutOfRangeMax {
            get {
                return ResourceManager.GetString("Ex_ShortvalueArgumentOutOfRangeMax", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The shortvalue  is not valid. The minimum must be greater than  0!.
        /// </summary>
        internal static string Ex_ShortvalueArgumentOutOfRangeMin {
            get {
                return ResourceManager.GetString("Ex_ShortvalueArgumentOutOfRangeMin", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Invalid type {0}, not a number!.
        /// </summary>
        internal static string Ex_SliderNumberType {
            get {
                return ResourceManager.GetString("Ex_SliderNumberType", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to AddTemplate not valid when StatusBar is running.
        /// </summary>
        internal static string Ex_StatusBarRunning {
            get {
                return ResourceManager.GetString("Ex_StatusBarRunning", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to UpdateHandler is invalid, value cannot be null!.
        /// </summary>
        internal static string Ex_UpdateHandlerProgressBar {
            get {
                return ResourceManager.GetString("Ex_UpdateHandlerProgressBar", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The value ({0}) is not valid when maximum is set to ({1})!.
        /// </summary>
        internal static string Ex_ValueArgumentOutOfRangeMax {
            get {
                return ResourceManager.GetString("Ex_ValueArgumentOutOfRangeMax", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The value ({0}) is not valid when minimum is set to ({1})!.
        /// </summary>
        internal static string Ex_ValueArgumentOutOfRangeMin {
            get {
                return ResourceManager.GetString("Ex_ValueArgumentOutOfRangeMin", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to TaskToRun is invalid, value cannot be null!.
        /// </summary>
        internal static string Ex_WaitTaskToRun {
            get {
                return ResourceManager.GetString("Ex_WaitTaskToRun", resourceCulture);
            }
        }
    }
}
